open Format
open Lib
open Grid
open Machine

let code = read stdin
let () = code.(0) <- 2

let send = "A,B,A,B,C,B,C,A,C,C\nR,12,L,10,L,10\nL,6,L,12,R,12,L,4\nL,12,R,12,L,6\ny\n"
let next = ref 0

let input () = let c = send.[!next] in incr next; Char.code c
let output v =
  if v > 255 then (printf "v = %d@." v; exit 0);
  output_char stdout (Char.chr v); flush stdout

let () = exec code input output

(*
..............###########................
..............#.........#................
..............#.........#................
..............#.........#................
..............#.........#................
..............#.........#................
..............#############..............
........................#.#..............
........................#.#..............
........................#.#..............
............^############.#..............
..........................#..............
..........................#..............
..........................#..............
..........................#..............
..........................#..............
..........................#..............
..........................#..............
..........................#####..........
..............................#..........
..............................#...#######
..............................#...#.....#
..............................#...#.....#
..............................#...#.....#
..............................#...#.....#
..............................#...#.....#
..............................#...#.....#
..............................#...#.....#
....#######...................#...#.....#
..........#...................#...#.....#
..........#.............#####.###########
..........#.............#...#.....#......
..........#...........#############......
..........#...........#.#...#............
..........#...........#.#...#............
..........#...........#.#...#............
..........#...........#############......
..........#.............#...#.....#......
..........#.............#...#.....#......
..........#.............#...#.....#......
..........#############.#...#.....#......
......................#.#...#.....#......
............#############...#############
............#.........#...........#.....#
............#.........#...........#.....#
............#.........#...........#.....#
..........#############...........#.....#
..........#.#.....................#.....#
#############.....................#######
#.........#..............................
#.........#..............................
#.........#..............................
#.........#..............................
#.........#..............................
#.........#..............................
#.........#..............................
#.........#..............................
#.........#..............................
###########..............................
*)
